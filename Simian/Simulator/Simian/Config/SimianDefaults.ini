[HTTP]

; The port number for the simulator HTTP server to listen on. If a valid SSL
; certificate is given for SSLCertFile, the HTTPS protocol will be used.
; Otherwise, the HTTP protocol is used.
ListenPort = 12043

; The hostname used to construct the HTTP URL for this server. If no hostname is
; specified, the default system hostname will be used.
; Note this needs to resolve to an IP Address that is valid on the host
; running Simian
;Hostname = hostname.example.com

; An SSL certificate file for the server. If a valid raw certificate or PKCS#12
; file is given the server will run in HTTPS mode.
;SSLCertFile = server.p12

[FileDataStore]

; The (relative or absolute) path to use for local file storage.
Path = LocalStore

; The (relative or absolute) path to use for temporary local file storage.
TempPath = LocalStore/Temporary

; The number of seconds to wait in between saving scene changes to disk.
SaveInterval = 60

[LindenRegion]

; The maximum number of prims per square meter allowed in each region. This is
; used to calculate parcel maximum prim counts. The default value will support
; a total of 15,000 prims in a region
PrimsPerSquareMeter = 0.2288818359375

[LLUDP]

; Address to bind the UDP server for a scene to. If no value is specified, the
; UDP server will bind to the first discovered interface
;BindAddress = 192.168.1.1

; IP that is sent to connecting clients. For example, a server binding to
; a local IP may want to report the external address the machine is available
; at
;MasqueradeAddress = external.ip.address

; Set this to true to process incoming packets asynchronously. Networking is
; already separated from packet handling with a queue, so this will only
; affect whether networking internals such as packet decoding and 
; acknowledgement accounting are done synchronously or asynchronously
AsyncPacketHandling = true

; The client socket receive buffer size determines how many
; incoming requests we can process; the default on .NET is 8192
; which is about 5 MTU-sized UDP datagrams. On mono this is
; whatever the underlying operating system has as default; for
; example, Ubuntu 8.04 and SLES11 have about 111k, which is about
; 73 MTU-sized UDP datagrams (on linux platforms you can [as root]
; do "sysctl net.core.rmem_default" to find out what your system
; uses a default socket receive buffer size.
;
; SocketReceiveBufferSize allows you to specify the receive
; buffer size LLUDP server should use. NOTE: This will be limited
; by the system's settings for the maximum client receive buffer
; size (on linux systems you can set that with "sysctl -w
; net.core.rmem_max=X")
;SocketReceiveBufferSize = 8388608

; A bytes per second limit for total outgoing UDP traffic to each connected
; client
ClientLimit = 0

; A bytes per second limit for total outgoing UDP traffic sent from a scene
SceneLimit = 0

; These are per-client, per-category throttling rates (in bytes per second)
; for UDP traffic sent from the simulator to clients. Clients will request
; their own bandwidth rates, but these values set a cap on the maximum 
; rates for each category. Use 0 for no cap
ResendLimit = 18750
LandLimit = 29750
WindLimit = 18750
CloudLimit = 18750
TaskLimit = 18750
TextureLimit = 55750
AssetLimit = 27500
StateLimit = 37000

[StandaloneInventoryClient]

; In standalone mode, an account is created that will own the library inventory
LibraryOwnerName = Library Owner

[WebLogin]

; A shared secret between grid services that have exposed service APIs. This key
; allows services to confirm that messages were generated by a trusted source.
; If no SharedSecret value is specified, a key will be randomly generated at
; startup (making trusted communication between services running on separate 
; machines impossible). Any length of shared secret can be used, but a 64
; character random string is the most secure
;SharedSecret = 

; The number of seconds before an authorization token times out. The default is
; 86400 seconds, or one day
TokenTimeout = 86400

[SimianGrid]

; The URLs of each SimianGrid service

UserService = http://localhost/Grid/
GridService = http://localhost/Grid/
AssetService = http://localhost/Grid/?id=
InventoryService = http://localhost/Grid/

[ApplicationModules]

; Controls the application modules that are loaded. These choices can be
; overridden in the Simian.ini file but not the individual scene
; configuration files. Set a module equal to true to enable, or false to
; disable

HttpListener = true
FileDataStore = true
Scheduler = true

; Sanity checks uploaded JPEG2000 data and appends texture metadata
JPEG2000Filter = true

; Caches mesh data for physics and rendering
MeshCache = true

; Remote connectors to central SimianGrid services. If these are enabled, make 
; sure the standalone connectors below are disabled, the built-in LindenLogin 
; service below is disabled, and the URLs in the [SimianGrid] section above are
; set correctly
;SimianGridUserClient = true
;SimianGridGridClient = true
;SimianGridAssetClient = true
;SimianGridInventoryClient = true

; Standalone connectors for running without a connection to central grid 
; services. If these are enabled, make sure the SimianGrid connectors above are
; disabled
StandaloneUserClient = true
StandaloneGridClient = true
StandaloneAssetClient = true
StandaloneInventoryClient = true
LindenLogin = true

; These modules enable the VWRAP protocols in standalone
AgentDomain = true
WebLogin = true
VwrapLogin = true

; Optional modules that add additional functionality
;IRCServer = true

; The scene factory should be the last application module listed, since it 
; will initialize all of the configured scenes and their scene modules
LLSceneFactory = true


[SceneModules]

; Controls the scene modules that are loaded. These choices can be overridden
; in the Simian.ini file or the individual scene configuration files, by 
; setting a module equal to true to enable or false to disable

LLUDP = true
LLPermissions = true
RezAvatar = true
LLTerrain = true
RegionInfo = true
Connections = true
Objects = true
Chat = true
Assets = true
Animations = true
Movement = true
Textures = true
GetTexture = true
LayerData = true
ParcelManager = true
Parcels = true
Inventory = true
Appearance = true
AgentData = true
LLPrimitiveLoader = true
OARLoader = true
SeedCapability = true
Voice = true
Upload = true
EventQueueGet = true
Neighbors = true
NewFileAgentInventory = true
TaskInventory = true
ObjectMedia = true
ClientStats = true
SimStats = true
LindenApi = true
ScriptConsole = true
XEngine = true

;;; Physics ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; A very basic managed physics engine that handles avatar dynamics and
; avatar/heightmap collisions
;SimplePhysics = true

; A hybrid managed/unmanaged physics engine that uses Bullet Physics
BulletSim = true

;;; Meshing ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; An open source mesher for the Linden Lab® primitive format
PrimMesher = true

; A simple mesh generator that only creates cubes
;BoxMesher = true



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Includes ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Include the custom user config file to append and override default values
Include Simian.ini
